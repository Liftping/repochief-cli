{
  "name": "RepoCHief Self-Development Tasks",
  "description": "Use RepoCHief to manage its own development with proper approval workflows",
  "budget": 10,
  "mockMode": true,
  "qualityGates": ["test", "lint", "security"],
  "agents": [
    {
      "name": "architect",
      "role": "architect",
      "model": "claude-3.5-sonnet",
      "capabilities": ["comprehension", "exploration"],
      "maxConcurrentTasks": 2
    },
    {
      "name": "developer",
      "role": "developer",
      "model": "gpt-4o",
      "capabilities": ["generation", "validation"],
      "maxConcurrentTasks": 3
    },
    {
      "name": "reviewer",
      "role": "qa",
      "model": "gpt-4o-mini",
      "capabilities": ["validation"],
      "maxConcurrentTasks": 2
    }
  ],
  "tasks": [
    {
      "id": "analyze-gaps",
      "type": "comprehension",
      "objective": "Analyze gaps between current RepoCHief capabilities and 2025 best practices",
      "priority": "high",
      "requiresApproval": true,
      "context": [
        "Current implementation status",
        "2025 best practices research",
        "Industry standards (K8s, OpenTelemetry, GitOps)"
      ],
      "successCriteria": [
        "Identify top 5 critical gaps",
        "Estimate implementation effort for each",
        "Provide cost-benefit analysis",
        "Recommend priority order"
      ],
      "maxTokens": 8000
    },
    {
      "id": "create-intent-canvas-tasks",
      "type": "generation",
      "objective": "Create Intent Canvas entries for approved development tasks",
      "priority": "high",
      "requiresApproval": true,
      "dependencies": ["analyze-gaps"],
      "context": [
        "Gap analysis results",
        "Business value assessment",
        "Resource constraints"
      ],
      "successCriteria": [
        "Create intents with clear objectives",
        "Define measurable success criteria",
        "Include business value justification",
        "Set realistic timelines"
      ],
      "maxTokens": 5000
    },
    {
      "id": "design-kubernetes-architecture",
      "type": "exploration",
      "objective": "Design Kubernetes deployment architecture for RepoCHief",
      "priority": "medium",
      "requiresApproval": true,
      "approvalNote": "Only execute if Kubernetes deployment is approved",
      "context": [
        "Current monorepo structure",
        "Service dependencies",
        "Scaling requirements"
      ],
      "successCriteria": [
        "Define pod specifications",
        "Create service boundaries",
        "Design networking strategy",
        "Plan persistent storage"
      ],
      "estimatedCost": 0.10,
      "maxTokens": 10000
    },
    {
      "id": "design-observability-stack",
      "type": "exploration",
      "objective": "Design observability integration with OpenTelemetry and Prometheus",
      "priority": "medium",
      "requiresApproval": true,
      "approvalNote": "Only execute if observability enhancement is approved",
      "context": [
        "Current logging approach",
        "Metrics requirements",
        "Cost tracking needs"
      ],
      "successCriteria": [
        "Define metrics to collect",
        "Design dashboard layouts",
        "Plan alert thresholds",
        "Estimate operational overhead"
      ],
      "estimatedCost": 0.08,
      "maxTokens": 8000
    },
    {
      "id": "design-model-selection-engine",
      "type": "exploration",
      "objective": "Design intelligent model selection system for cost optimization",
      "priority": "low",
      "requiresApproval": true,
      "approvalNote": "Only execute if model optimization is approved",
      "context": [
        "Current model usage patterns",
        "Task complexity analysis",
        "Cost per model data"
      ],
      "successCriteria": [
        "Define selection heuristics",
        "Create routing logic",
        "Estimate cost savings",
        "Design A/B testing framework"
      ],
      "estimatedCost": 0.12,
      "maxTokens": 10000
    },
    {
      "id": "validate-claude-integration",
      "type": "validation",
      "objective": "Validate RepoCHief integration with Claude Code workflow",
      "priority": "critical",
      "requiresApproval": false,
      "context": [
        "Current Claude Code usage",
        "RepoCHief task management",
        "Approval workflow requirements"
      ],
      "successCriteria": [
        "Document integration points",
        "Test approval workflows",
        "Verify human-in-the-loop controls",
        "Ensure task tracking works"
      ],
      "maxTokens": 5000
    },
    {
      "id": "create-dogfooding-demo",
      "type": "generation",
      "objective": "Create a demonstration of RepoCHief managing its own development",
      "priority": "high",
      "requiresApproval": false,
      "dependencies": ["validate-claude-integration"],
      "context": [
        "Self-referential development",
        "Task approval workflows",
        "Progress tracking"
      ],
      "successCriteria": [
        "Create demo script",
        "Show approval workflow",
        "Demonstrate progress tracking",
        "Highlight cost controls"
      ],
      "maxTokens": 6000
    }
  ],
  "approvalWorkflow": {
    "enabled": true,
    "requiresHumanApproval": [
      "design-kubernetes-architecture",
      "design-observability-stack",
      "design-model-selection-engine"
    ],
    "autoApprove": [
      "analyze-gaps",
      "create-intent-canvas-tasks",
      "validate-claude-integration",
      "create-dogfooding-demo"
    ],
    "approvalTimeout": 3600,
    "defaultAction": "skip"
  },
  "costControls": {
    "maxCostPerTask": 0.50,
    "totalBudget": 10.00,
    "alertThreshold": 0.80,
    "haltOnBudgetExceeded": true
  },
  "outputConfig": {
    "saveResults": true,
    "outputDir": "./repochief-self-development-output",
    "generateReport": true,
    "trackProgress": true
  }
}